# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  schedule:
    - cron: '0 0 1 4,10 *' # Runs at midnight on the first day of April and October

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  release-ppa:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        versionName:
          - 'noble'
          - 'oriole'
          - 'plucky'
        package:
          - 'hypnotix'
          - 'circle-flags'
        include:
          - package: 'hypnotix'
            publishedPackageName: 'hypnotix'
          - package: 'circle-flags'
            publishedPackageName: 'circle-flags-svg'


    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'linuxmint/${{ matrix.package }}'

      - name: Set version to ubuntu ${{ matrix.versionName }}
        run: |
          # See https://linuxmint.com/download_all.php for version names
          
          sed -i -E "s/^${{ matrix.package }} \(([^\)]+)\) [^;]+;/${{ matrix.package }} (\1-${{ matrix.versionName }}) ${{ matrix.versionName }};/" debian/changelog
          
          # Print the updated changelog
          cat debian/changelog

      - name: Detect latest version
        run: |
          # Extract the version number from the changelog
          VERSION=$(grep -oP '${{ matrix.package }} \(\K[^\)]+(?=\))' debian/changelog | head -n 1)  
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "${{ matrix.package }} version: $VERSION"

      - name: Install dependencies
        run: sudo apt-get install devscripts debhelper build-essential

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.PPA_GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}

      - name: Run build
        run: |
          debuild --no-tgz-check -kstefan.lobbenmeier@gmail.com -S -sa
          pwd
          tree ..

      - name: Publish PPA
        run: |
          cd ..
          dput ppa:stefanlobbenmeier/hypnotix ${{ matrix.publishedPackageName }}_${{ env.VERSION }}_source.changes
